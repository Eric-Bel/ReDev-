// Задача №1
// Вы можете знать несколько довольно больших идеальных 
// квадратов. Но как насчет следующего?
// Завершите метод findNextSquare, который находит следующий
// целочисленный идеальный квадрат после того, как передан
// в качестве параметра. Напомним, что целочисленный совершенный 
// квадрат - это такое целое число n, что sqrt (n) также является целым числом.
// Если параметр сам по себе не является идеальным квадратом,
// то должно быть возвращено -1. Вы можете предположить, 
// что параметр положительный.

function findNextSquare(fullSquare) {
    let squareRoot = Math.sqrt(fullSquare) // квадратный корень аргумента присваиваем к переменной
    let nextRoot // готовим контейнер для увеличения квадратного корня на 1, чтобы потом найти его квадрат.
    if (Number.isInteger(squareRoot)) { // проверяем, является ли квадратный корень целым числом
        nextRoot = squareRoot + 1 // если да, прибавляем к квадаратному корню число 1
    } else {
        return -1 // если нет, возвращаем -1
    }
    return nextRoot * nextRoot // квадаратный корень, к которому прибавили 1, возводим в квадрат
}

console.log(findNextSquare(121)); // --> 144
console.log(findNextSquare(625)); // --> 676
console.log(findNextSquare(114 )); // --> -1
